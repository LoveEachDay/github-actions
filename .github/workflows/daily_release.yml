name: Daily Release
on:
  push:
  #schedule:
  #  # * is a special character in YAML so you have to quote this string
  #  #         ┌───────────── minute (0 - 59)
  #  #         │ ┌───────────── hour (0 - 23)
  #  #         │ │ ┌───────────── day of the month (1 - 31)
  #  #         │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
  #  #         │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
  #  #         │ │ │ │ │
  #  #         │ │ │ │ │
  #  #         │ │ │ │ │
  #  - cron:  '*/10 * * * *'

jobs:
  nightly:
    name: Run Daily Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    env:
      IMAGE_REPO: "milvusdb"
      DEV: "milvus-dev"
      DAILY: "milvus-nightly"
      TAG_PREFIX: "master-"
    steps:
    - uses: actions/checkout@v2

    - name: Get the latest of Milvus dev image tag
      shell: bash
      working-directory: ci/scripts
      run: echo "tag=$(./docker_image_find_tag.sh -n ${IMAGE_REPO}/${DEV} -t ${TAG_PREFIX}latest -f ${TAG_PREFIX} -F -L -q)" >> $GITHUB_ENV

    - name: Set release commit and date env
      shell: bash
      run: |
        tag=${{ env.tag }}
        IFS=- read branch date sha <<< "$tag"
        echo "date=v2.0.0-alpha$date" >> $GITHUB_ENV
        echo "sha=$sha" >> $GITHUB_ENV
        echo "localSha=$(git rev-list -n 1 --abbrev-commit HEAD)" >> $GITHUB_ENV


    - name: Pull latest milvus-dev image with tag prefix master-
      run: |
        docker pull "${IMAGE_REPO}/${DEV}:${{ env.tag }}"
        docker tag "${IMAGE_REPO}/${DEV}:${{ env.tag }}" "${IMAGE_REPO}/${DAILY}:${{ env.tag }}"

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Push Docker image
      run: |
        docker push "${IMAGE_REPO}/${DAILY}:${{ env.tag }}"


    - name: Create a daily release
      uses: ncipollo/release-action@v1
      with:
        body: "Milvus-2.0.0-testing-build\n\nRelease date: `date`\n\nImage: ${IMAGE_REPO}/${DAILY}:${{ steps.extracter.outputs.tag }}\n\nChanges:\n`git rev-list --abbrev-commit --max-age=$(date -d '24 hour ago' +'%s') --reverse  --pretty=oneline HEAD`"
        token: ${{ secrets.REPO_TOKEN }}
        prerelease: true
        commit: ${{ env.localSha }}
        tag: ${{ env.date }}



